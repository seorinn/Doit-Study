@page "/testscoreinfo/{studentId}"

@using System.Net.Http
@using System.Net.Http.Json

@inject ITestScoreService testScoreService
@inject IStudentService studentService
@inject IJSRuntime jsRuntime
@inject HttpClient http

<div class="col-10">
    <h3><b>@studentId-@student.name's Score</b></h3>
    <br/>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Student</th>
                <th>Subject</th>
                <th>Score</th>
                <th>Semester</th>
                <th>Etc..</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var _score in testScoreList)
            {
                <tr>
                    <td>@_score.scoreId</td>
                    <td>@_score.studentId</td>
                    <td>@Enum.GetName(_score.subjectId)</td>
                    <td>@_score.score</td>
                    <td>@_score.semester</td>
                    <td> <button class="btn btn-primary" @onclick="() => RemoveTestScoreAsync(_score.scoreId)">Remove</button> </td>
                </tr>
            }
        </tbody>

    </table>
</div>

@code {
    [Parameter]
    public string studentId {get; set;}
    public Student student {get; set;} = new Student();
    public List<TestScore> testScoreList {get; set;} = new List<TestScore>();
    protected override async Task OnInitializedAsync()
    {
        student = await http.GetFromJsonAsync<Student>($"https://localhost:5001/api/students/studentId={studentId}");
        
        // testScoreList에 studentId를 가진 testScore를 구별하여 저장하기.
        await LoadTestScoresListAsync();

        await base.OnInitializedAsync();
    }
    private async Task LoadTestScoresListAsync(){
        testScoreList = await http.GetFromJsonAsync<List<TestScore>>("https://localhost:5001/api/TestScores");
        testScoreList = testScoreList.Where(score => score.studentId == studentId).ToList();
    }
    private async Task RemoveTestScoreAsync(string id){

        // API에 scoreId의 TestScore를 제거하는 메소드를 구현.
        await http.DeleteAsync($"https://localhost:5001/api/TestScores/testscoreid={id}");
        await LoadTestScoresListAsync();

        return;
    }
    
}
